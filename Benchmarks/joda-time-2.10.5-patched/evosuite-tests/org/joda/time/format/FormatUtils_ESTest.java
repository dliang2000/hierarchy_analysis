/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 15 05:07:13 GMT 2020
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.CharArrayWriter;
import java.io.IOException;
import java.io.PipedWriter;
import java.io.StringWriter;
import java.io.Writer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.joda.time.format.FormatUtils;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FormatUtils_ESTest extends FormatUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FormatUtils.createErrorMessage("}\"/QYG=/~&cgCHQ<qk@", (-1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FormatUtils.createErrorMessage("Invalid format: \"I+P5@bgn&{\" is malformed at \"P5@bgn&{\"", 0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FormatUtils.calculateDigitCount(10000L);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FormatUtils.calculateDigitCount(1000L);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FormatUtils.calculateDigitCount(10);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FormatUtils.calculateDigitCount(0L);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      MockFile mockFile0 = new MockFile("|iKy", "E1");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      FormatUtils.writeUnpaddedInteger((Writer) mockPrintWriter0, 19);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      FormatUtils.writeUnpaddedInteger((Writer) stringWriter0, 100);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(20);
      FormatUtils.appendUnpaddedInteger(stringBuffer0, 100);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      FormatUtils.writePaddedInteger((Writer) stringWriter0, 9223372036854775802L, (-16));
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      FormatUtils.writePaddedInteger((Writer) stringWriter0, 10, 10);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      FormatUtils.appendPaddedInteger(stringBuffer0, 10L, (-63));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      MockFile mockFile0 = new MockFile("|iKy", "E1");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      FormatUtils.writeUnpaddedInteger((Writer) mockPrintWriter0, 34L);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("d_80SMVNLj5 'n3ML.D");
      FormatUtils.appendUnpaddedInteger(stringBuffer0, (long) 10);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      FormatUtils.appendUnpaddedInteger((Appendable) stringWriter0, (long) 0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(0);
      FormatUtils.appendPaddedInteger(stringBuffer0, 0, 0);
      stringBuffer0.insert(1, 0L);
      FormatUtils.parseTwoDigits(stringBuffer0, 0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FormatUtils.parseTwoDigits("$L/c vW", 0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.writeUnpaddedInteger((Writer) null, 0L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.writeUnpaddedInteger((Writer) null, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(1214);
      // Undeclared exception!
      FormatUtils.writePaddedInteger((Writer) stringWriter0, 149L, 13421772);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        FormatUtils.writePaddedInteger((Writer) pipedWriter0, 80, (-3465));
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      StringBuffer stringBuffer0 = stringWriter0.getBuffer();
      // Undeclared exception!
      try { 
        FormatUtils.parseTwoDigits(stringBuffer0, 155);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.parseTwoDigits((CharSequence) null, 2446);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.createErrorMessage((String) null, 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.appendUnpaddedInteger((StringBuffer) null, 1000);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.appendUnpaddedInteger((Appendable) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.appendPaddedInteger((StringBuffer) null, (-163L), (-91));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.appendPaddedInteger((StringBuffer) null, 4, 190);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      MockFile mockFile0 = new MockFile("]=q}|@4lfz", "]=q}|@4lfz");
      MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
      // Undeclared exception!
      FormatUtils.appendPaddedInteger((Appendable) mockPrintStream0, (-810L), 13421772);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.appendPaddedInteger((Appendable) null, 0L, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        FormatUtils.appendPaddedInteger((Appendable) pipedWriter0, (-1765L), 0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      BufferedWriter bufferedWriter0 = new BufferedWriter(stringWriter0);
      bufferedWriter0.close();
      try { 
        FormatUtils.appendPaddedInteger((Appendable) bufferedWriter0, 100, 0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.BufferedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FormatUtils.calculateDigitCount(100L);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.appendUnpaddedInteger((Appendable) null, (-2550L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(0);
      FormatUtils.appendUnpaddedInteger((Appendable) stringBuffer0, (-842));
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.writePaddedInteger((Writer) null, 3443, 3443);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      MockFile mockFile0 = new MockFile("!^@$8oak", "!^@$8oak");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      FormatUtils.writePaddedInteger((Writer) mockPrintWriter0, 19, 19);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      FormatUtils.writePaddedInteger((Writer) charArrayWriter0, (-690), (-690));
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("d_80SMVNLj5 'n3ML.D");
      FormatUtils.appendPaddedInteger((Appendable) stringBuffer0, (-2147213760), (-2147213760));
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      MockFile mockFile0 = new MockFile("~K(tG@24&L;^:W", "");
      MockFileWriter mockFileWriter0 = new MockFileWriter(mockFile0, false);
      FormatUtils.appendPaddedInteger((Appendable) mockFileWriter0, 42, 42);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.appendPaddedInteger((Appendable) null, 32, 1706);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("L&rY4vbeg");
      FormatUtils.appendPaddedInteger((Appendable) stringBuffer0, 0, 1000);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      // Undeclared exception!
      FormatUtils.appendPaddedInteger((Appendable) charArrayWriter0, (-1963), 1840700269);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FormatUtils.createErrorMessage("BNv", 4);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FormatUtils.createErrorMessage("]$z[Vt>`", 4);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.createErrorMessage("", (byte) (-52));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FormatUtils.calculateDigitCount(9223372036854775802L);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FormatUtils.calculateDigitCount((-330L));
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FormatUtils.calculateDigitCount((-9223372036854775808L));
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      try { 
        FormatUtils.writeUnpaddedInteger((Writer) pipedWriter0, 1L);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      MockFile mockFile0 = new MockFile("|iKy", "E1");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      FormatUtils.writeUnpaddedInteger((Writer) mockPrintWriter0, 10);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      FormatUtils.writeUnpaddedInteger((Writer) charArrayWriter0, (-320));
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      FormatUtils.writeUnpaddedInteger((Writer) stringWriter0, 0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer();
      FormatUtils.appendUnpaddedInteger((Appendable) stringBuffer0, (-9223372036854775808L));
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(19);
      FormatUtils.appendUnpaddedInteger((Appendable) charArrayWriter0, 19);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      FormatUtils.writePaddedInteger((Writer) stringWriter0, (-9223372036854775808L), 23);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      // Undeclared exception!
      FormatUtils.writePaddedInteger((Writer) stringWriter0, 2123884926, 2123884926);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.writePaddedInteger((Writer) null, 100L, 32);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      FormatUtils.writePaddedInteger((Writer) charArrayWriter0, 0, 3);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      FormatUtils.writePaddedInteger((Writer) stringWriter0, 0L, (-4569));
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(394);
      FormatUtils.writePaddedInteger((Writer) stringWriter0, Integer.MIN_VALUE, 33);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      FormatUtils.appendPaddedInteger((Appendable) stringWriter0, (-9223372036854775808L), 883);
      assertEqualsstringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(3);
      FormatUtils.appendPaddedInteger((Appendable) stringBuffer0, (-9223372036854775808L), (int) (byte) (-24));
      assertEquals("-9223372036854775808", stringBuffer0.toString());
      assertEquals(20, stringBuffer0.length());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer(0);
      // Undeclared exception!
      FormatUtils.appendPaddedInteger(stringBuffer0, 1397L, 8257536);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(394);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      FormatUtils.appendPaddedInteger((Appendable) mockPrintWriter0, Integer.MIN_VALUE, 394);
      assertEquals("-0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002147483648", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      int int0 = FormatUtils.parseTwoDigits("java.net.URI", 0);
      assertEquals(629, int0);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      // Undeclared exception!
      try { 
        FormatUtils.appendUnpaddedInteger((StringBuffer) null, 2398L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.format.FormatUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      StringBuffer stringBuffer0 = new StringBuffer("9223372036854775808");
      // Undeclared exception!
      FormatUtils.appendPaddedInteger(stringBuffer0, 8257536, 8257536);
  }
}
