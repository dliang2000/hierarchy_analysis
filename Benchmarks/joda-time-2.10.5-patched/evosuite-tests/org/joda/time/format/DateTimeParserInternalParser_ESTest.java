/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 15 07:38:21 GMT 2020
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormatterBuilder;
import org.joda.time.format.DateTimeParser;
import org.joda.time.format.DateTimeParserInternalParser;
import org.joda.time.format.InternalParser;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DateTimeParserInternalParser_ESTest extends DateTimeParserInternalParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DateTimeFormatterBuilder.StringLiteral dateTimeFormatterBuilder_StringLiteral0 = new DateTimeFormatterBuilder.StringLiteral(")H`Rd!G[!v<`+");
      DateTimeFormatter dateTimeFormatter0 = new DateTimeFormatter(dateTimeFormatterBuilder_StringLiteral0, dateTimeFormatterBuilder_StringLiteral0);
      DateTimeParser dateTimeParser0 = dateTimeFormatter0.getParser();
      InternalParser internalParser0 = DateTimeParserInternalParser.of(dateTimeParser0);
      assertSame(dateTimeParser0, internalParser0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      InternalParser internalParser0 = DateTimeParserInternalParser.of((DateTimeParser) null);
      assertNull(internalParser0);
  }
}
