/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 15 07:28:34 GMT 2020
 */

package org.joda.time.format;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.StringWriter;
import java.io.Writer;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.MutablePeriod;
import org.joda.time.PeriodType;
import org.joda.time.ReadablePeriod;
import org.joda.time.format.PeriodFormat;
import org.joda.time.format.PeriodFormatter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class PeriodFormat_ESTest extends PeriodFormat_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      // Undeclared exception!
      try { 
        PeriodFormat.wordBased((Locale) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      PeriodFormatter periodFormatter0 = PeriodFormat.wordBased();
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      MutablePeriod mutablePeriod0 = new MutablePeriod(1L);
      Locale locale0 = Locale.CANADA_FRENCH;
      int int0 = periodFormat_DynamicWordBased0.calculatePrintedLength(mutablePeriod0, locale0);
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Locale locale0 = new Locale("57&5]hWBN]T/4k'jH");
      PeriodFormatter periodFormatter0 = PeriodFormat.wordBased(locale0);
      assertTrue(periodFormatter0.isPrinter());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Locale locale0 = Locale.US;
      PeriodFormatter periodFormatter0 = PeriodFormat.wordBased(locale0);
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      MutablePeriod mutablePeriod0 = new MutablePeriod();
      StringWriter stringWriter0 = new StringWriter();
      periodFormat_DynamicWordBased0.printTo((Writer) stringWriter0, (ReadablePeriod) mutablePeriod0, locale0);
      assertEquals("0 milliseconds", stringWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      PeriodFormatter periodFormatter0 = PeriodFormat.wordBased();
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      PeriodType periodType0 = PeriodType.yearDayTime();
      MutablePeriod mutablePeriod0 = new MutablePeriod(periodType0);
      Locale locale0 = new Locale("R?smf7{$:?lH'", "MK");
      int int0 = periodFormat_DynamicWordBased0.countFieldsToPrint(mutablePeriod0, 4, locale0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      PeriodFormatter periodFormatter0 = PeriodFormat.wordBased();
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      PeriodType periodType0 = PeriodType.yearDayTime();
      MutablePeriod mutablePeriod0 = new MutablePeriod(periodType0);
      int int0 = periodFormat_DynamicWordBased0.calculatePrintedLength(mutablePeriod0, (Locale) null);
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Locale locale0 = Locale.US;
      PeriodFormatter periodFormatter0 = PeriodFormat.wordBased(locale0);
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      MutablePeriod mutablePeriod0 = new MutablePeriod();
      StringBuffer stringBuffer0 = new StringBuffer();
      periodFormat_DynamicWordBased0.printTo(stringBuffer0, (ReadablePeriod) mutablePeriod0, locale0);
      assertEquals("US", locale0.getCountry());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      PeriodFormatter periodFormatter0 = PeriodFormat.wordBased();
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      PeriodType periodType0 = PeriodType.yearDayTime();
      MutablePeriod mutablePeriod0 = new MutablePeriod(periodType0);
      Locale locale0 = new Locale("R?smf7{$:?lH'", "MK");
      int int0 = periodFormat_DynamicWordBased0.parseInto(mutablePeriod0, "R?smf7{$:?lH'", 2, locale0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      PeriodFormat periodFormat0 = new PeriodFormat();
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      PeriodFormatter periodFormatter0 = PeriodFormat.getDefault();
      PeriodFormat.DynamicWordBased periodFormat_DynamicWordBased0 = new PeriodFormat.DynamicWordBased(periodFormatter0);
      PeriodType periodType0 = PeriodType.yearMonthDay();
      MutablePeriod mutablePeriod0 = new MutablePeriod((Object) null, periodType0);
      int int0 = periodFormat_DynamicWordBased0.parseInto(mutablePeriod0, "!+bGx6", (-1935161494), (Locale) null);
      assertEquals((-1935161494), int0);
  }
}
