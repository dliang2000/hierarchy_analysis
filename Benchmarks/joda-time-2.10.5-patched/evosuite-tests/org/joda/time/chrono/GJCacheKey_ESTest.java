/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 15 05:41:30 GMT 2020
 */

package org.joda.time.chrono;

import org.junit.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.DateTimeZone;
import org.joda.time.Instant;
import org.joda.time.chrono.GJCacheKey;
import org.joda.time.chrono.GJChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GJCacheKey_ESTest extends GJCacheKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(3864);
      Instant instant0 = GJChronology.DEFAULT_CUTOVER;
      GJCacheKey gJCacheKey0 = new GJCacheKey(dateTimeZone0, instant0, (-1484));
      GJCacheKey gJCacheKey1 = new GJCacheKey(dateTimeZone0, instant0, 3864);
      boolean boolean0 = gJCacheKey0.equals(gJCacheKey1);
      assertFalse(gJCacheKey1.equals((Object)gJCacheKey0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
      Instant instant0 = new Instant();
      GJCacheKey gJCacheKey0 = new GJCacheKey(dateTimeZone0, instant0, (-1577));
      GJCacheKey gJCacheKey1 = new GJCacheKey((DateTimeZone) null, instant0, (-1577));
      boolean boolean0 = gJCacheKey0.equals(gJCacheKey1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
      Instant instant0 = new Instant();
      GJCacheKey gJCacheKey0 = new GJCacheKey(dateTimeZone0, instant0, (-1577));
      GJCacheKey gJCacheKey1 = new GJCacheKey((DateTimeZone) null, instant0, (-1577));
      boolean boolean0 = gJCacheKey1.equals(gJCacheKey0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(3868);
      Instant instant0 = GJChronology.DEFAULT_CUTOVER;
      GJCacheKey gJCacheKey0 = new GJCacheKey(dateTimeZone0, instant0, (-1483));
      GJCacheKey gJCacheKey1 = new GJCacheKey(dateTimeZone0, instant0, (-2624));
      boolean boolean0 = gJCacheKey0.equals(gJCacheKey1);
      assertFalse(gJCacheKey1.equals((Object)gJCacheKey0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
      Instant instant0 = new Instant();
      Instant instant1 = instant0.minus((-1709L));
      GJCacheKey gJCacheKey0 = new GJCacheKey(dateTimeZone0, instant1, 0);
      GJCacheKey gJCacheKey1 = new GJCacheKey(dateTimeZone0, instant0, 0);
      boolean boolean0 = gJCacheKey0.equals(gJCacheKey1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GJCacheKey gJCacheKey0 = new GJCacheKey((DateTimeZone) null, (Instant) null, (-2639));
      GJCacheKey gJCacheKey1 = new GJCacheKey((DateTimeZone) null, (Instant) null, (-2639));
      boolean boolean0 = gJCacheKey0.equals(gJCacheKey1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
      GJChronology gJChronology0 = GJChronology.getInstanceUTC();
      GJCacheKey gJCacheKey0 = new GJCacheKey(dateTimeZone0, (Instant) null, (byte)31);
      Instant instant0 = gJChronology0.getGregorianCutover();
      GJCacheKey gJCacheKey1 = new GJCacheKey(dateTimeZone0, instant0, (byte)31);
      boolean boolean0 = gJCacheKey0.equals(gJCacheKey1);
      assertFalse(gJCacheKey1.equals((Object)gJCacheKey0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Instant instant0 = new Instant();
      DateTimeZone dateTimeZone0 = DateTimeZone.getDefault();
      GJCacheKey gJCacheKey0 = new GJCacheKey(dateTimeZone0, instant0, 0);
      GJCacheKey gJCacheKey1 = new GJCacheKey(dateTimeZone0, instant0, 0);
      boolean boolean0 = gJCacheKey0.equals(gJCacheKey1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GJCacheKey gJCacheKey0 = new GJCacheKey((DateTimeZone) null, (Instant) null, (-2624));
      Object object0 = new Object();
      boolean boolean0 = gJCacheKey0.equals(object0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GJCacheKey gJCacheKey0 = new GJCacheKey((DateTimeZone) null, (Instant) null, (-2624));
      boolean boolean0 = gJCacheKey0.equals(gJCacheKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GJCacheKey gJCacheKey0 = new GJCacheKey((DateTimeZone) null, (Instant) null, (-2624));
      boolean boolean0 = gJCacheKey0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DateTimeZone dateTimeZone0 = DateTimeZone.forOffsetMillis(0);
      GJCacheKey gJCacheKey0 = new GJCacheKey(dateTimeZone0, (Instant) null, 0);
      gJCacheKey0.hashCode();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Instant instant0 = new Instant();
      GJCacheKey gJCacheKey0 = new GJCacheKey((DateTimeZone) null, instant0, 1626);
      gJCacheKey0.hashCode();
  }
}
