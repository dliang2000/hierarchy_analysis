/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 15 04:18:50 GMT 2020
 */

package org.joda.time.convert;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.joda.time.Chronology;
import org.joda.time.DateTimeZone;
import org.joda.time.ReadablePartial;
import org.joda.time.convert.ReadablePartialConverter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ReadablePartialConverter_ESTest extends ReadablePartialConverter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ReadablePartialConverter readablePartialConverter0 = new ReadablePartialConverter();
      // Undeclared exception!
      try { 
        readablePartialConverter0.getPartialValues((ReadablePartial) null, (Object) null, (Chronology) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.ReadablePartialConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MockHijrahDate mockHijrahDate0 = new MockHijrahDate();
      ReadablePartialConverter readablePartialConverter0 = ReadablePartialConverter.INSTANCE;
      // Undeclared exception!
      try { 
        readablePartialConverter0.getPartialValues((ReadablePartial) null, (Object) mockHijrahDate0, (Chronology) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate cannot be cast to org.joda.time.ReadablePartial
         //
         verifyException("org.joda.time.convert.ReadablePartialConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ReadablePartialConverter readablePartialConverter0 = ReadablePartialConverter.INSTANCE;
      // Undeclared exception!
      try { 
        readablePartialConverter0.getChronology((Object) null, (Chronology) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.ReadablePartialConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ReadablePartialConverter readablePartialConverter0 = ReadablePartialConverter.INSTANCE;
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      // Undeclared exception!
      try { 
        readablePartialConverter0.getChronology((Object) mockMinguoDate0, (Chronology) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate cannot be cast to org.joda.time.ReadablePartial
         //
         verifyException("org.joda.time.convert.ReadablePartialConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      ReadablePartialConverter readablePartialConverter0 = ReadablePartialConverter.INSTANCE;
      // Undeclared exception!
      try { 
        readablePartialConverter0.getChronology((Object) null, (DateTimeZone) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.joda.time.convert.ReadablePartialConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ReadablePartialConverter readablePartialConverter0 = new ReadablePartialConverter();
      Class<?> class0 = readablePartialConverter0.getSupportedType();
      // Undeclared exception!
      try { 
        readablePartialConverter0.getChronology((Object) class0, (DateTimeZone) null);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Class cannot be cast to org.joda.time.ReadablePartial
         //
         verifyException("org.joda.time.convert.ReadablePartialConverter", e);
      }
  }
}
