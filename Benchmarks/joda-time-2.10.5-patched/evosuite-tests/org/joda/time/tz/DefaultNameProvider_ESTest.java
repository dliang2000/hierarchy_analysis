/*
 * This file was automatically generated by EvoSuite
 * Thu Oct 15 06:34:51 GMT 2020
 */

package org.joda.time.tz;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.joda.time.tz.DefaultNameProvider;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DefaultNameProvider_ESTest extends DefaultNameProvider_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.TRADITIONAL_CHINESE;
      locale0.getDisplayLanguage();
      defaultNameProvider0.getName(locale0, "", "1,euD2VhAR", false);
      Locale locale1 = Locale.CANADA;
      locale0.hasExtensions();
      defaultNameProvider0.getName(locale1, "", (String) null, true);
      locale0.getDisplayCountry();
      defaultNameProvider0.getName(locale0, (String) null, (String) null);
      defaultNameProvider0.getShortName(locale0, "W1zY:Z", "1,euD2VhAR");
      defaultNameProvider0.getName(locale1, (String) null, (String) null, true);
      locale0.getDisplayVariant(locale1);
      defaultNameProvider0.getShortName(locale0, "MST", "MST");
      defaultNameProvider0.getShortName(locale0, "", "neuFNcu,%Wg.))E-gz", false);
      locale1.getUnicodeLocaleKeys();
      defaultNameProvider0.getName(locale1, "", "'(&=]2Vk&04g");
      defaultNameProvider0.getName(locale0, "", "");
      defaultNameProvider0.getShortName(locale0, "", "");
      defaultNameProvider0.getShortName(locale1, "s`$T1wQSq$L|b2GQ", "yXI[T!!+:rIp`T");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.JAPANESE;
      defaultNameProvider0.getName(locale0, "MST", "MST");
      Locale locale1 = Locale.ITALIAN;
      locale1.getDisplayScript(locale0);
      defaultNameProvider0.getShortName(locale1, "Partial must not be null", "");
      defaultNameProvider0.getShortName(locale1, "Partial must not be null", "nYNRJw8)B^:#zh", false);
      defaultNameProvider0.getShortName(locale1, "", "Partial must not be null");
      defaultNameProvider0.getName(locale1, "C*%hvgv[", "", false);
      locale0.getDisplayScript();
      defaultNameProvider0.getName(locale1, "\u5C71\u5730\u6A19\u6E96\u6642", (String) null, false);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.forLanguageTag("an0#V<M?");
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) set0);
      defaultNameProvider0.getName(locale0, "rXK", "rXK");
      locale0.getDisplayScript();
      locale0.getDisplayLanguage();
      defaultNameProvider0.getName(locale0, "", "7X]", true);
      defaultNameProvider0.getShortName(locale0, "", "Invalid UTC zone provided", true);
      defaultNameProvider0.getShortName(locale0, "", "", true);
      defaultNameProvider0.getName(locale0, "9otjw", "Etc/", false);
      defaultNameProvider0.getName(locale0, "GMT", "rXK");
      defaultNameProvider0.getName(locale0, "an0#V<M?", "PST", false);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.FRENCH;
      defaultNameProvider0.getName(locale0, "America/Los_Angeles", "");
      defaultNameProvider0.getShortName(locale0, "America/Los_Angeles", "", true);
      defaultNameProvider0.getShortName(locale0, "", "` }1$", true);
      defaultNameProvider0.getShortName(locale0, "", "sB", true);
      defaultNameProvider0.getName(locale0, "[n!-X*#YWt!p78<e)", "", true);
      defaultNameProvider0.getName(locale0, "ISOChronology", "%2kzp", true);
      defaultNameProvider0.getShortName(locale0, "%2kzp", "");
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      defaultNameProvider0.getShortName((Locale) null, "", "Millis out of range: ");
      defaultNameProvider0.getName((Locale) null, "", "", false);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      defaultNameProvider0.getShortName((Locale) null, (String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.JAPANESE;
      defaultNameProvider0.getShortName(locale0, "h;+;SVrmM1NsfIC~", "h;+;SVrmM1NsfIC~");
      defaultNameProvider0.getShortName(locale0, (String) null, "-Summer");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.GERMANY;
      defaultNameProvider0.getShortName(locale0, "smE5C3#na4cVN.e#I$6", "smE5C3#na4cVN.e#I$6");
      defaultNameProvider0.getShortName(locale0, "System property referred to class that does not implement ", "smE5C3#na4cVN.e#I$6", true);
      defaultNameProvider0.getShortName(locale0, "4x/#u}", "", false);
      defaultNameProvider0.getName(locale0, (String) null, (String) null, false);
      defaultNameProvider0.getShortName(locale0, (String) null, (String) null, false);
      defaultNameProvider0.getShortName(locale0, "-Summer", "Etc/");
      defaultNameProvider0.getName(locale0, "4x/#u}", (String) null);
      defaultNameProvider0.getName(locale0, "4x/#u}", (String) null);
      defaultNameProvider0.getShortName(locale0, (String) null, "MFbXIUBqv6{;#0T", true);
      defaultNameProvider0.getShortName(locale0, "MFbXIUBqv6{;#0T", "");
      defaultNameProvider0.getShortName(locale0, (String) null, "+H>'", true);
      defaultNameProvider0.getShortName(locale0, (String) null, "T^fj!'(,!)/");
      defaultNameProvider0.getShortName(locale0, "", "System property referred to class that does not implement ", false);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.GERMAN;
      defaultNameProvider0.getName(locale0, "", "Etc/", false);
      Locale locale1 = new Locale("", "JOa.HU-YYai^ZA`r", "");
      locale0.getDisplayScript(locale1);
      defaultNameProvider0.getName(locale0, "Ily&5FvTXm<hG", "");
      defaultNameProvider0.getName(locale0, "", (String) null, false);
      Locale.forLanguageTag("");
      defaultNameProvider0.getName(locale0, (String) null, (String) null);
      defaultNameProvider0.getName(locale0, "Ily&5FvTXm<hG", "Id must not be null");
      defaultNameProvider0.getShortName(locale0, "dAGpg!9Y\"P", "", false);
      defaultNameProvider0.getName(locale0, "dAGpg!9Y\"P", (String) null);
      defaultNameProvider0.getShortName(locale1, "Etc/", "", false);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.CHINA;
      defaultNameProvider0.getName(locale0, "+", "@MX221oSyQ", true);
      defaultNameProvider0.getShortName(locale0, "TSF+", "v4m(!^Q;zqdDds7}");
      Locale locale1 = Locale.UK;
      defaultNameProvider0.getShortName(locale1, "v4m(!^Q;zqdDds7}", "6:*uBCVo52Q#Shg&d%");
      defaultNameProvider0.getName(locale1, (String) null, "+", false);
      defaultNameProvider0.getShortName(locale0, (String) null, "v4m(!^Q;zqdDds7}");
      Locale locale2 = Locale.KOREAN;
      defaultNameProvider0.getName(locale2, (String) null, (String) null, false);
      Locale locale3 = Locale.GERMANY;
      defaultNameProvider0.getShortName(locale3, (String) null, "", true);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.GERMAN;
      locale0.getDisplayScript();
      locale0.getUnicodeLocaleKeys();
      locale0.hasExtensions();
      defaultNameProvider0.getShortName(locale0, "", "Pk", false);
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) null, locale_FilteringMode0);
      List<Locale> list1 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list0, locale_FilteringMode0);
      Locale.FilteringMode locale_FilteringMode1 = Locale.FilteringMode.EXTENDED_FILTERING;
      List<Locale> list2 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list1, locale_FilteringMode1);
      List<Locale> list3 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list2);
      Locale.FilteringMode locale_FilteringMode2 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<Locale> list4 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list3, locale_FilteringMode2);
      Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) list4);
      defaultNameProvider0.getShortName(locale0, "", "+AFQvzZavCMcK,u&C");
      defaultNameProvider0.getName(locale0, "", "");
      defaultNameProvider0.getShortName(locale0, "", "");
      defaultNameProvider0.getShortName(locale0, "Millis out of range: ", "LaqbgT@[OdZHke[", false);
      defaultNameProvider0.getName(locale0, "Millis out of range: ", "+AFQvzZavCMcK,u&C");
      defaultNameProvider0.getShortName(locale0, "", "-Summer");
      defaultNameProvider0.getShortName(locale0, "", "Etc/", true);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.UK;
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      LinkedList<String> linkedList1 = new LinkedList<String>();
      Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) linkedList1);
      defaultNameProvider0.getName(locale0, (String) null, "");
      Locale locale1 = Locale.TRADITIONAL_CHINESE;
      Locale locale2 = Locale.UK;
      locale1.getDisplayCountry(locale2);
      defaultNameProvider0.getShortName(locale1, "~a^:g!.J{", "Tl>^-wJbx8lXwOR", true);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.US;
      Locale locale1 = locale0.stripExtensions();
      defaultNameProvider0.getShortName(locale1, "Partial must not be null", "");
      Locale locale2 = new Locale("Partial must not be null");
      defaultNameProvider0.getShortName(locale2, "Etc/", "tmc3jy$d!8X7Sxd`5");
      defaultNameProvider0.getShortName(locale2, "PDT", "PDT");
      defaultNameProvider0.getShortName(locale2, "MST", "PDT");
      Locale locale3 = Locale.ROOT;
      defaultNameProvider0.getShortName(locale3, "-Summer", "Etc/");
      locale3.getUnicodeLocaleAttributes();
      defaultNameProvider0.getShortName(locale3, "Id must not be null", "utuYRNX:");
      defaultNameProvider0.getName(locale2, (String) null, "Id must not be null");
      defaultNameProvider0.getName(locale2, (String) null, "Id must not be null");
      defaultNameProvider0.getName(locale2, "tmc3jy$d!8X7Sxd`5", "tmc3jy$d!8X7Sxd`5", true);
      defaultNameProvider0.getShortName(locale2, (String) null, (String) null, true);
      defaultNameProvider0.getName(locale3, "BV%W", (String) null);
      defaultNameProvider0.getName(locale1, (String) null, "(kz;Z");
      String string0 = defaultNameProvider0.getName(locale1, (String) null, (String) null);
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.KOREA;
      String string0 = null;
      defaultNameProvider0.getName(locale0, "=cF|KnP)Z]n4J~|", (String) null);
      // Undeclared exception!
      try { 
        Locale.forLanguageTag((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      String string0 = defaultNameProvider0.getName(locale0, "-Summer", "-Summer");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      DefaultNameProvider defaultNameProvider0 = new DefaultNameProvider();
      Locale locale0 = Locale.US;
      Locale locale1 = Locale.ITALY;
      locale0.getDisplayVariant(locale1);
      defaultNameProvider0.getShortName(locale0, "", "", true);
      locale0.getUnicodeLocaleAttributes();
      defaultNameProvider0.getShortName(locale0, "", "d9Sp$*h");
      defaultNameProvider0.getName(locale1, (String) null, "GMT");
      defaultNameProvider0.getShortName(locale0, "-Summer", "", true);
      defaultNameProvider0.getName(locale0, "GMT", "GMT", true);
      defaultNameProvider0.getName(locale1, "org.joda.time.JodaTimePermission", "GMT");
      Locale locale2 = Locale.GERMAN;
      locale2.getScript();
      String string0 = defaultNameProvider0.getName(locale2, "", "");
      assertNull(string0);
  }
}
